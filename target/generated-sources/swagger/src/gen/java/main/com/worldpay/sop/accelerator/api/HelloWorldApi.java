/*
 * SOP Accelerator API
 * SOP Accelerator API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.worldpay.sop.accelerator.api;

import com.google.gson.reflect.TypeToken;
import com.worldpay.sop.accelerator.model.Error;
import com.worldpay.sop.accelerator.model.ServiceResponse;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.response.Response;

import java.lang.reflect.Type;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;
import com.worldpay.sop.accelerator.JSON;

import static io.restassured.http.Method.*;

public class HelloWorldApi {

    private RequestSpecBuilder reqSpec;

    private HelloWorldApi(RequestSpecBuilder reqSpec) {
        this.reqSpec = reqSpec;
    }

    public static HelloWorldApi helloWorld(RequestSpecBuilder reqSpec) {
        return new HelloWorldApi(reqSpec);
    }


    public SayHelloOper sayHello() {
        return new SayHelloOper(reqSpec);
    }

    /**
    * Customise request specification
    */
    public HelloWorldApi reqSpec(Consumer<RequestSpecBuilder> consumer) {
        consumer.accept(reqSpec);
        return this;
    }

    /**
     * Hello World Endpoint
     * Simple GET Operation that returns a JSON message with a simple payload. 
     *
     * @see #versionPath API Version (required)
     * @see #xWPDiagnosticCorrelationIdHeader Correlation ID to trace the initial request (required)
     * @see #xWPDiagnosticsCallerIdHeader X-WP-Diagnostics-CallerId (required)
     * @see #xWPTimestampHeader X-WP-Timestamp (required)
     * @see #xWPJwtHeader The name of the header containing the JWT token which holds a set of entitlements or ‘claims’ associated with the authenticated Subject. (required)
     * @see #responseTypeQuery Response Type (required)
     * return ServiceResponse
     */
    public class SayHelloOper {

        public static final String REQ_URI = "/sopa/{version}/hello";

        private RequestSpecBuilder reqSpec;

        private ResponseSpecBuilder respSpec;

        public SayHelloOper() {
            this.reqSpec = new RequestSpecBuilder();
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        public SayHelloOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * GET /sopa/{version}/hello
         */
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(GET, REQ_URI));
        }

        /**
         * GET /sopa/{version}/hello
         * @return ServiceResponse
         */
        public ServiceResponse executeAs(Function<Response, Response> handler) {
            Type type = new TypeToken<ServiceResponse>(){}.getType();
            return execute(handler).as(type);
        }

        /**
         * @param xWPDiagnosticCorrelationId (String) Correlation ID to trace the initial request (required)
         */
        public SayHelloOper xWPDiagnosticCorrelationIdHeader(String xWPDiagnosticCorrelationId) {
            reqSpec.addHeader("X-WP-Diagnostic-CorrelationId", xWPDiagnosticCorrelationId);
            return this;
        }

        /**
         * @param xWPDiagnosticsCallerId (String) X-WP-Diagnostics-CallerId (required)
         */
        public SayHelloOper xWPDiagnosticsCallerIdHeader(String xWPDiagnosticsCallerId) {
            reqSpec.addHeader("X-WP-Diagnostics-CallerId", xWPDiagnosticsCallerId);
            return this;
        }

        /**
         * @param xWPTimestamp (String) X-WP-Timestamp (required)
         */
        public SayHelloOper xWPTimestampHeader(String xWPTimestamp) {
            reqSpec.addHeader("X-WP-Timestamp", xWPTimestamp);
            return this;
        }

        /**
         * @param xWPJwt (String) The name of the header containing the JWT token which holds a set of entitlements or ‘claims’ associated with the authenticated Subject. (required)
         */
        public SayHelloOper xWPJwtHeader(String xWPJwt) {
            reqSpec.addHeader("X-WP-Jwt", xWPJwt);
            return this;
        }

        /**
         * @param version (String) API Version (required)
         */
        public SayHelloOper versionPath(Object version) {
            reqSpec.addPathParam("version", version);
            return this;
        }

        /**
         * @param responseType (String) Response Type (required)
         */
        public SayHelloOper responseTypeQuery(Object... responseType) {
            reqSpec.addQueryParam("responseType", responseType);
            return this;
        }

        /**
         * Customise request specification
         */
        public SayHelloOper reqSpec(Consumer<RequestSpecBuilder> consumer) {
            consumer.accept(reqSpec);
            return this;
        }

        /**
         * Customise response specification
         */
        public SayHelloOper respSpec(Consumer<ResponseSpecBuilder> consumer) {
            consumer.accept(respSpec);
            return this;
        }
    }
}